function WeaponLaser(a, d, c, b, e, f, h, g, k, l, m) {
    this.stage = a;
    this.particlesystem = d;
    this.worldwidth = b;
    this.worldheight = e;
    this.viewwidth = f;
    this.viewheight = h;
    this.worldy = k + 20;
    this.killme = c;
    this.width = 20;
    this.height = 2;
    a = new PARTSYS.Emitter;
    a.x = -2;
    a.y = -2;
    a.density = {min: 5, max: 10};
    1 === l ? (this.worldx = g + 42, this.deltax = 20, a.angle = {min: 180, max: 180}) : (this.worldx = g + 42, this.deltax = -20, a.angle = {min: 0, max: 0});
    a.speed = {min: 1, max: 2};
    a.rotation = 0;
    a.particlerotation = {min: -1, max: 1};
    a.lifetime = {min: 16, max: 17};
    a.bounded = {x: 0,
        y         : 0, width: b + f, height: e, type: "die"};
    a.lockbounded = !1;
    a.lockfields = !0;
    a.lockparticles = !0;
    b = this.particlesystem.getEmitterNames();
    for (e = 0; ;) {
        this.emittername = this.worldx.toString() + " " + this.worldy.toString() + e;
        if (-1 === b.indexOf(this.emittername))break;
        e += 1
    }
    a.onCreateParticle = this.createParticle.bind(this);
    a.onUpdateParticles = this.updateParticles.bind(this);
    a.onRemoveParticle = this.removeParticle.bind(this);
    this.particlesystem.addEmitter(this.emittername, a);
    this.update(m, 1E3 / 60)
}
WeaponLaser.constructor = WeaponLaser;
WeaponLaser.prototype = Object.create(Object.prototype);
WeaponLaser.prototype.cleanup = function (a) {
    this.particlesystem.removeEmitter(this.emittername);
    this.killme(this)
};
WeaponLaser.prototype.everySecond = function (a) {
};
WeaponLaser.prototype.createParticle = function (a) {
    var d = PIXI.Texture.fromFrame("explodicle.png");
    a.sprite = new PIXI.Sprite(d, 32, 32);
    a.sprite.position.x = a.position.x;
    a.sprite.position.y = a.position.y;
    a.sprite.anchor.x = 0.5;
    a.sprite.anchor.y = 0.5;
    this.stage.addChild(a.sprite)
};
WeaponLaser.prototype.updateParticles = function (a, d) {
    var c, b;
    for (c = 0; c < d.length; c++)this.render ? (b = d[c], b.visible = !0, b.sprite.position.x = b.position.x, b.sprite.position.y = b.position.y, b.sprite.rotation = PARTSYS.degreesToRadians(b.angle)) : d[c].visible = !1
};
WeaponLaser.prototype.removeParticle = function (a) {
    this.stage.removeChild(a.sprite);
    a.sprite = null
};
WeaponLaser.prototype.update = function (a, d) {
    var c, b = -1;
    this.worldx += this.deltax * d * 60 / 1E3;
    0 > this.worldx && (this.worldx = this.worldwidth + this.worldx);
    this.worldx > this.worldwidth && (this.worldx = this.worldx - this.worldwidth - 1);
    this.render = !1;
    this.y = this.worldy;
    c = a + this.viewwidth;
    c > this.worldwidth && (b = c - this.worldwidth - 1);
    -1 === b ? this.worldx >= a - this.width && this.worldx <= c + this.width && (this.x = this.worldx - a, this.render = !0) : this.worldx >= a - this.width && this.worldx <= this.worldwidth ? (this.x = this.worldx - a, this.render = !0) : this.worldx <= b + this.width && (this.x = this.worldwidth - a + this.worldx, this.render = !0);
    this.render ? this.particlesystem.moveEmitter(this.emittername, this.x, this.y) : this.cleanup()
};
