function Cthortal(a, b, c, d, e, f, g, h) {
    this.stage = a;
    this.worldwidth = c;
    this.worldheight = d;
    this.viewwidth = e;
    this.viewheight = f;
    this.worldx = g;
    this.worldy = h;
    this.particlesystem = b;
    this.g = new PIXI.Graphics;
    this.stage.addChild(this.g);
    this.render = !1;
    this.height = this.width = 64;
    this.status = "growing";
    a = new PARTSYS.Emitter;
    a.x = -2;
    a.y = -2;
    a.density = {min: 5, max: 10};
    a.speed = {min: 1, max: 2};
    a.rotation = 5;
    a.lifetime = {min: 10, max: 20};
    a.bounded = {x: this.viewwidth / 2 - this.width / 2, y: this.viewheight / 2 - this.height / 2, width: 1, height: 1,
        type      : "die"};
    a.lockbounded = !0;
    a.lockfields = !0;
    a.lockparticles = !0;
    this.x = a.x;
    this.y = a.y;
    b = this.particlesystem.getEmitterNames();
    for (c = 0; ;) {
        this.emittername = this.worldx.toString() + " " + this.worldy.toString() + c;
        if (-1 === b.indexOf(this.emittername))break;
        c += 1
    }
    a.onCreateParticle = this.createParticle.bind(this);
    a.onUpdateParticles = this.updateParticles.bind(this);
    a.onRemoveParticle = this.removeParticle.bind(this);
    this.particlesystem.addEmitter(this.emittername, a)
}
Cthortal.constructor = Cthortal;
Cthortal.prototype = Object.create(Object.prototype);
Cthortal.prototype.cleanup = function (a) {
    this.particlesystem.removeEmitter(this.emittername)
};
Cthortal.prototype.everySecond = function (a) {
};
Cthortal.prototype.expand = function (a) {
    var b = this.particlesystem.getEmitter(this.emittername);
    b && (b.bounded.width += a, b.bounded.height += a, 0 >= b.bounded.width && ("dying" === this.status && (this.status = "dead"), b.bounded.width = 1), 0 >= b.bounded.height && ("dying" === this.status && (this.status = "dead"), b.bounded.height = 1), b.bounded.width > this.width && ("growing" === this.status && (this.status = "living"), b.bounded.width = this.width), b.bounded.height > this.height && ("growing" === this.status && (this.status = "living"), b.bounded.height =
        this.height))
};
Cthortal.prototype.createParticle = function (a) {
    var b = PIXI.Texture.fromFrame("cthorticle.png");
    a.sprite = new PIXI.Sprite(b, 32, 32);
    a.sprite.position.x = a.position.x;
    a.sprite.position.y = a.position.y;
    a.sprite.anchor.x = 0.5;
    a.sprite.anchor.y = 0.5;
    this.stage.addChild(a.sprite)
};
Cthortal.prototype.updateParticles = function (a, b) {
    var c, d;
    for (c = 0; c < b.length; c++)this.render ? (d = b[c], d.visible = !0, d.sprite.position.x = d.position.x, d.sprite.position.y = d.position.y, d.sprite.rotation = PARTSYS.degreesToRadians(d.angle)) : b[c].visible = !1
};
Cthortal.prototype.removeParticle = function (a) {
    this.stage.removeChild(a.sprite);
    a.sprite = null
};
Cthortal.prototype.update = function (a) {
    var b, c = -1;
    this.render = !1;
    this.y = this.worldy;
    b = a + this.viewwidth;
    b > this.worldwidth && (c = b - this.worldwidth - 1);
    -1 === c ? this.worldx >= a - this.width && this.worldx <= b + this.width && (this.x = this.worldx - a, this.render = !0) : this.worldx >= a - this.width && this.worldx <= this.worldwidth ? (this.x = this.worldx - a, this.render = !0) : this.worldx <= c + this.width && (this.x = this.worldwidth - a + this.worldx, this.render = !0);
    "growing" === this.status && this.expand(0.25);
    "dying" === this.status && this.expand(-0.25);
    a = this.particlesystem.getEmitter(this.emittername);
    a.bounded.x = this.x - a.bounded.width / 2;
    a.bounded.y = this.y - a.bounded.height / 2;
    this.particlesystem.moveEmitter(this.emittername, this.x, this.y)
};
