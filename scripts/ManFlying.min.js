function ManFlying(a, c, b, d, e, h) {
    var f, g;
    f = "man_flight_1_r.png man_flight_2_r.png man_flight_3_r.png man_flight_4_r.png man_flight_5_r.png man_flight_6_r.png man_flight_7_r.png man_flight_8_r.png man_flight_9_r.png man_flight_10_r.png man_flight_11_r.png man_flight_12_r.png man_flail_1_r.png man_flail_2_r.png man_flail_3_r.png man_flail_4_r.png".split(" ");
    g = "man_flight_1_l.png man_flight_2_l.png man_flight_3_l.png man_flight_4_l.png man_flight_5_l.png man_flight_6_l.png man_flight_7_l.png man_flight_8_l.png man_flight_9_l.png man_flight_10_l.png man_flight_11_l.png man_flight_12_l.png man_flail_1_l.png man_flail_2_l.png man_flail_3_l.png man_flail_4_l.png".split(" ");
    this.anims_r = {flying: f.slice(0, 12), flailing: f.slice(12)};
    this.anims_l = {flying: g.slice(0, 12), flailing: g.slice(12)};
    this.incrementval = this.textureincrement = 0.1;
    this.worldwidth = a;
    this.worldheight = c;
    this.viewwidth = b;
    this.viewheight = d;
    this.worldx = e;
    this.worldy = h;
    this.animtype = "flying";
    GameObject.call(this, f[0], 24, 12, a, c, b, d, e, h);
    this.visible = !1
}
ManFlying.constructor = ManFlying;
ManFlying.prototype = Object.create(GameObject.prototype);
ManFlying.prototype.updateTexture = function (a, c, b) {
    a = 1 === b.olddirection ? this.anims_r : this.anims_l;
    this.textureincrement += this.incrementval;
    this.textureincrement >= a[this.animtype].length && (this.incrementval = -this.incrementval, this.textureincrement += this.incrementval);
    0 > this.textureincrement && (this.incrementval = -this.incrementval, this.textureincrement += this.incrementval);
    a = PIXI.Texture.fromFrame(a[this.animtype][Math.floor(this.textureincrement)]);
    this.setTexture(a)
};
ManFlying.prototype.update = function (a, c, b) {
    this.visible = !1;
    this.worldx = b.worldx + 42;
    this.worldy = b.worldy + b.height;
    this.position.y = this.worldy;
    this.worldx > this.worldwidth && (this.worldx -= this.worldwidth);
    var d = a + this.viewwidth, e = -1;
    d > this.worldwidth && (e = d - this.worldwidth - 1);
    this.worldx >= a && this.worldx <= this.worldwidth ? (this.position.x = this.worldx - a, this.visible = !0) : this.worldx <= e && (this.position.x = this.worldwidth - a + this.worldx, this.visible = !0);
    this.visible && "flying" === c.status && this.updateTexture(a,
                                                                c, b)
};
